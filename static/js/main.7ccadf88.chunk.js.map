{"version":3,"sources":["components/Player.jsx","components/Song.jsx","data.js","components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","getTime","time","Math","floor","slice","activeLibraryHandler","nextprev","newSongs","map","s","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","onChange","e","target","value","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","song","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","songEndHandler","onTimeUpdate","onLoadedMetadata","onEnded","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ccadf88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaPlay,\r\n\tfaAngleLeft,\r\n\tfaAngleRight,\r\n\tfaPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nconst Player = ({\r\n\tcurrentSong,\r\n\tisPlaying,\r\n\tsetIsPlaying,\r\n\taudioRef,\r\n\tsongInfo,\r\n\tsetSongInfo,\r\n\tsongs,\r\n\tsetCurrentSong,\r\n\tsetSongs,\r\n}) => {\r\n\tconst getTime = (time) => {\r\n\t\treturn (\r\n\t\t\tMath.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n\t\t);\r\n\t};\r\n\r\n\tconst activeLibraryHandler = (nextprev) => {\r\n\t\tconst newSongs = songs.map((s) =>\r\n\t\t\ts.id === nextprev.id ? { ...s, active: true } : { ...s, active: false }\r\n\t\t);\r\n\t\tsetSongs(newSongs);\r\n\t};\r\n\r\n\tconst dragHandler = (e) => {\r\n\t\taudioRef.current.currentTime = e.target.value;\r\n\t\tsetSongInfo({ ...songInfo, currentTime: e.target.value });\r\n\t};\r\n\r\n\tconst playSongHandler = () => {\r\n\t\tif (isPlaying) {\r\n\t\t\taudioRef.current.pause();\r\n\t\t\tsetIsPlaying(!isPlaying);\r\n\t\t} else {\r\n\t\t\taudioRef.current.play();\r\n\t\t\tsetIsPlaying(!isPlaying);\r\n\t\t}\r\n\t};\r\n\r\n\tconst skipTrackHandler = async (direction) => {\r\n\t\tlet currentIndex = songs.findIndex((s) => s.id === currentSong.id);\r\n\t\tif (direction === \"skip-forward\") {\r\n\t\t\tawait setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n\t\t\tactiveLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n\t\t\tif (isPlaying) audioRef.current.play();\r\n\t\t}\r\n\t\tif (direction === \"skip-back\") {\r\n\t\t\tif ((currentIndex - 1) % songs.length === -1) {\r\n\t\t\t\tawait setCurrentSong(songs[songs.length - 1]);\r\n\t\t\t\tactiveLibraryHandler(songs[songs.length - 1]);\r\n\t\t\t\tif (isPlaying) audioRef.current.play();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tawait setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n\t\t\tactiveLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n\t\t}\r\n\t\tif (isPlaying) audioRef.current.play();\r\n\t};\r\n\r\n\tconst trackAnim = {\r\n\t\ttransform: `translateX(${songInfo.animationPercentage}%)`,\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"player\">\r\n\t\t\t<div className=\"time-control\">\r\n\t\t\t\t<p>{getTime(songInfo.currentTime)}</p>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"track\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\tmax={songInfo.duration || 0}\r\n\t\t\t\t\t\tonChange={dragHandler}\r\n\t\t\t\t\t\tvalue={songInfo.currentTime}\r\n\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div style={trackAnim} className=\"animate-track\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"play-control\">\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"skip-back\")}\r\n\t\t\t\t\tclassName=\"skip-back\"\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\ticon={faAngleLeft}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tclassName=\"play\"\r\n\t\t\t\t\tonClick={playSongHandler}\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\ticon={isPlaying ? faPause : faPlay}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tonClick={() => skipTrackHandler(\"skip-forward\")}\r\n\t\t\t\t\tclassName=\"skip-forword\"\r\n\t\t\t\t\tsize=\"2x\"\r\n\t\t\t\t\ticon={faAngleRight}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react'\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt=\"cover\" />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n\r\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n\tsong,\r\n\tsetCurrentSong,\r\n\tsongs,\r\n\taudioRef,\r\n\tisPlaying,\r\n\tsetSongs,\r\n}) => {\r\n\tconst songSelectHandler = async () => {\r\n\t\tawait setCurrentSong(song);\r\n\t\tconst newSongs = songs.map((s) =>\r\n\t\t\ts.id === song.id ? { ...s, active: true } : { ...s, active: false }\r\n\t\t);\r\n\t\tsetSongs(newSongs);\r\n\t\tif (isPlaying) audioRef.current.play();\r\n\t};\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={songSelectHandler}\r\n\t\t\tclassName={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n\t\t>\r\n\t\t\t<img src={song.cover} alt=\"cover\" />\r\n\t\t\t<div className=\"song-description\">\r\n\t\t\t\t<h3>{song.name}</h3>\r\n\t\t\t\t<h4>{song.artist} </h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n\tsongs,\r\n\tsetCurrentSong,\r\n\taudioRef,\r\n\tisPlaying,\r\n\tsetIsPlaying,\r\n\tsetSongs,\r\n\tlibraryStatus,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n\t\t\t<h2>Library</h2>\r\n\t\t\t<div className=\"library-songs\">\r\n\t\t\t\t{songs.map((song) => (\r\n\t\t\t\t\t<LibrarySong\r\n\t\t\t\t\t\tsong={song}\r\n\t\t\t\t\t\tsongs={songs}\r\n\t\t\t\t\t\tsetCurrentSong={setCurrentSong}\r\n\t\t\t\t\t\tkey={song.id}\r\n\t\t\t\t\t\taudioRef={audioRef}\r\n\t\t\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\t\t\tsetSongs={setSongs}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Library;\r\n","import { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<h1>Waves</h1>\r\n\t\t\t<button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n\t\t\t\tLibrary <FontAwesomeIcon icon={faMusic} />\r\n\t\t\t</button>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import { useRef, useState } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\nimport data from \"./data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n\tconst audioRef = useRef(null);\n\n\tconst [songs, setSongs] = useState(data());\n\tconst [currentSong, setCurrentSong] = useState(songs[0]);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [songInfo, setSongInfo] = useState({\n\t\tcurrentTime: 0,\n\t\tduration: 0,\n\t\tanimationPercentage: 0,\n\t});\n\tconst [libraryStatus, setLibraryStatus] = useState(false);\n\n\tconst timeUpdateHandler = (e) => {\n\t\tconst current = e.target.currentTime;\n\t\tconst duration = e.target.duration;\n\t\tconst roundedCurrent = Math.round(current);\n\t\tconst roundedDuration = Math.round(duration);\n\t\tconst animationPercentage = Math.round(\n\t\t\t(roundedCurrent / roundedDuration) * 100\n\t\t);\n\t\tsetSongInfo({\n\t\t\t...songInfo,\n\t\t\tcurrentTime: current,\n\t\t\tduration,\n\t\t\tanimationPercentage,\n\t\t});\n\t};\n\n\tconst songEndHandler = async () => {\n\t\tlet currentIndex = songs.findIndex((s) => s.id === currentSong.id);\n\t\tawait setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n\t\tif (isPlaying) audioRef.current.play();\n\t};\n\treturn (\n\t\t<div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n\t\t\t<Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n\t\t\t<Song currentSong={currentSong} />\n\t\t\t<Player\n\t\t\t\tisPlaying={isPlaying}\n\t\t\t\tsetIsPlaying={setIsPlaying}\n\t\t\t\tcurrentSong={currentSong}\n\t\t\t\taudioRef={audioRef}\n\t\t\t\tsongInfo={songInfo}\n\t\t\t\tsetSongInfo={setSongInfo}\n\t\t\t\tsongs={songs}\n\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\tsetSongs={setSongs}\n\t\t\t/>\n\t\t\t<Library\n\t\t\t\tsongs={songs}\n\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\taudioRef={audioRef}\n\t\t\t\tisPlaying={isPlaying}\n\t\t\t\tsetIsPlaying={setIsPlaying}\n\t\t\t\tsetSongs={setSongs}\n\t\t\t\tlibraryStatus={libraryStatus}\n\t\t\t/>\n\t\t\t<audio\n\t\t\t\tonTimeUpdate={timeUpdateHandler}\n\t\t\t\tonLoadedMetadata={timeUpdateHandler}\n\t\t\t\tonEnded={songEndHandler}\n\t\t\t\tref={audioRef}\n\t\t\t\tsrc={currentSong.audio}\n\t\t\t></audio>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}